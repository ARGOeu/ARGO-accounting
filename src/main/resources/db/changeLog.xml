<?xml version="1.0"  encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xmlns:pro="http://www.liquibase.org/xml/ns/pro"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
	http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.0.xsd
	http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
    http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-4.0.xsd">

    <changeSet id="1" author="accounting-system">
        <ext:createCollection collectionName="MetricDefinition">
            <ext:options>
                {
                validator: {
                $jsonSchema: {
                bsonType: "object",
                required: ["metricName", "unitType", "metricType"],
                properties: {
                metricName: {
                bsonType: "string",
                description: "The name of the Metric"
                },
                metricType: {
                bsonType: "string",
                description: "Metric Type of the Metric"
                },
                metricDescription: {
                bsonType: "string",
                description: "Description of how the metric is collected"
                },
                unitType: {
                bsonType: "string",
                description: "Unit Type of the Virtual Access Metric"
                }
                }
                }
                },
                validationAction: "warn",
                validationLevel: "strict"
                }
            </ext:options>
        </ext:createCollection>
    </changeSet>

    <changeSet id="2" author="accounting-system">
        <ext:createIndex collectionName="MetricDefinition">
            <ext:keys>
                { metricName: 1, unitType: 1}
            </ext:keys>
            <ext:options>
                {unique: true, name: "unique_name_unit_type"}
            </ext:options>
        </ext:createIndex>
    </changeSet>

    <changeSet id="3" author="accounting-system">
        <ext:createCollection collectionName="Metric">
            <ext:options>
                {
                validator: {
                $jsonSchema: {
                bsonType: "object",
                required: ["metricDefinitionId", "resourceId", "value", "start", "end"],
                properties: {
                metricDefinitionId: {
                bsonType: "string",
                description: "The Metric Definition to be assigned"
                },
                resourceId: {
                bsonType: "string",
                description: "Unique Identifier from the resource"
                },
                value: {
                bsonType: "double",
                description: "Value of the metric for the given period"
                },
                start: {
                bsonType: "date",
                description: "Timestamp of the starting date time (Zulu timestamp)"
                },
                end: {
                bsonType: "date",
                description: "Timestamp of the end date time (Zulu timestamp)"
                }
                }
                }
                },
                validationAction: "warn",
                validationLevel: "strict"
                }
            </ext:options>
        </ext:createCollection>
    </changeSet>

    <!--    <changeSet id="4" author="accounting-system">-->
    <!--        <ext:createCollection collectionName="Role">-->
    <!--            <ext:options>-->
    <!--                {-->
    <!--                validator: {-->
    <!--                $jsonSchema: {-->
    <!--                bsonType: "object",-->
    <!--                required: ["name"],-->
    <!--                properties: {-->
    <!--                name: {-->
    <!--                bsonType: "string",-->
    <!--                description: "The Role name"-->
    <!--                },-->
    <!--                description: {-->
    <!--                bsonType: "string",-->
    <!--                description: "The role description explains the operations a user or a service is expected to perform"-->
    <!--                },-->
    <!--                collectionPermission: {-->
    <!--                bsonType: "object",-->
    <!--                required: ["collection", "permissions"],-->
    <!--                properties: {-->
    <!--                permissions: {-->
    <!--                bsonType: "array",-->
    <!--                description: "The permissions upon a Collection that have been assigned to that role",-->
    <!--                items: {-->
    <!--                bsonType: "object",-->
    <!--                required: ["operation", "accessType"],-->
    <!--                properties: {-->
    <!--                operation: {-->
    <!--                enum: [ "CREATE", "UPDATE", "DELETE", "READ"],-->
    <!--                description: "The operation attribute can only be one of the the available API operations"-->
    <!--                },-->
    <!--                accessType: {-->
    <!--                enum: [ "ALWAYS", "NEVER", "ENTITY"],-->
    <!--                description: "The accessType attribute can only be one of the the available access types"-->
    <!--                }-->
    <!--                }-->
    <!--                }-->
    <!--                },-->
    <!--                collection: {-->
    <!--                enum: [ "MetricDefinition", "Metric"],-->
    <!--                description: "Can only be one of the the available collections"-->
    <!--                }-->
    <!--                }-->
    <!--                }-->
    <!--                }-->
    <!--                }-->
    <!--                },-->
    <!--                validationAction: "warn",-->
    <!--                validationLevel: "strict"-->
    <!--                }-->
    <!--            </ext:options>-->
    <!--        </ext:createCollection>-->
    <!--    </changeSet>-->

    <changeSet id="5" author="accounting-system">
        <ext:createIndex collectionName="Role">
            <ext:keys>
                { name: 1}
            </ext:keys>
            <ext:options>
                {unique: true, name: "unique_role_name"}
            </ext:options>
        </ext:createIndex>
    </changeSet>

    <changeSet id="6" author="accounting-system">
        <ext:insertMany collectionName="Role">
            <ext:documents>
                [
                {
                name: "metric_definition_admin",
                description: "metric_definition_admin will always be able to perform any operation in the Metric Definition collection.",
                collectionPermission: [
                {
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "ALWAYS"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "MetricDefinition"
                }]
                },
                {
                name: "metric_definition_inspector",
                description: "metric_definition_inspector can read any entity in the Metric Definition collection, but cannot create new ones or update, delete any Metric Definitions.",
                collectionPermission: [{
                permissions: [
                {
                operation: "CREATE",
                accessType: "NEVER"
                },
                {
                operation: "UPDATE",
                accessType: "NEVER"
                },
                {
                operation: "DELETE",
                accessType: "NEVER"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                }
                ],
                collection: "MetricDefinition"
                }]
                },
                {
                name: "metric_definition_editor",
                description: "metric_definition_editor  can create new Metric Definitions, as well as update, and read any entity in the collection. But cannot delete any entity in the Metric Definition collection.",
                collectionPermission: [{
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "NEVER"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "MetricDefinition"
                }]
                },
                {
                name: "metric_definition_creator",
                description: "metric_definition_creator can create new Metric Definitions, but can update, delete or read only its Metric Definitions.",
                collectionPermission: [{
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ENTITY"
                },
                {
                operation: "DELETE",
                accessType: "ENTITY"
                },
                {
                operation: "READ",
                accessType: "ENTITY"
                },
                {
                operation: "ACL",
                accessType: "ENTITY"
                }
                ],
                collection: "MetricDefinition"
                }]
                }
                ]
            </ext:documents>
        </ext:insertMany>
    </changeSet>

    <changeSet id="7" author="accounting-system">
        <ext:insertOne collectionName="Role">
            <ext:document>
                {
                name: "system_admin",
                description: "system_admin will always be able to perform any operation in Accounting System API.",
                collectionPermission: [
                {
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "ALWAYS"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "MetricDefinition"
                },
                {
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "ALWAYS"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "Metric"
                },
                {
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "ALWAYS"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "Role"
                },
                {
                permissions: [
                {
                operation: "CREATE",
                accessType: "ALWAYS"
                },
                {
                operation: "UPDATE",
                accessType: "ALWAYS"
                },
                {
                operation: "DELETE",
                accessType: "ALWAYS"
                },
                {
                operation: "READ",
                accessType: "ALWAYS"
                },
                {
                operation: "ACL",
                accessType: "ALWAYS"
                }
                ],
                collection: "Provider"
                }]
                }
            </ext:document>
        </ext:insertOne>
    </changeSet>

    <changeSet id="8" author="accounting-system">
        <ext:createIndex collectionName="AccessControl">
            <ext:keys>
                { who: 1, collection: 1, entity: 1}
            </ext:keys>
            <ext:options>
                {unique: true, name: "unique_access_control_entry"}
            </ext:options>
        </ext:createIndex>
    </changeSet>
</databaseChangeLog>